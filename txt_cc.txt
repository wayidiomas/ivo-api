vamos lá, agora que entendemos um pouco o projeto, uma correção, nao vamos gerar o pdf em si. mas sim o conteudo em json que retorna dando um get na unidade especifica ao meu banco no supabase. ja temos isso construido. no caso, o que precisamos construir são dois endpoints com uma nova variavel comum que é bem importante que usará ia para 
dar a resposta. o primeiro endpoint é o api/v2/units/{unit_id}/solve_assessments. esse endpoint ele usará uma ia que irá corrigir as avaliações que são as 7 que a ia pode gerar nesse projeto em services/assessment_selector.py e api/v2/assessments.py e também unit_models e arquivos que te mostrem como funciona. vamos precisar criar inicialmente 
dois arquivos? api/v2/solve.py e services/solve_assessments.py. o primeiro aonde fica as rotas. que podem ser post,put,get e delete. o put e post passa pela ia em solve_assessments.py. ah, importante, precisamos criar o arquivo professor_solving.yaml que é da onde importamos o prompt principal. vale a pena nessa parte voce olhar a pasta config que fica loco na raiz do projeto
a ia usara o modelo gpt-5 para fazer correções. já existem configurações especificas para esse modelo. apenas busque no projeto como configuramos o modelo. uma parte importante é que a response da api de solve_assessment será usado o modulo do langchain structured output que ja usamos para deixar a resposta da ia em um json padrão. 
também me de o comando sql, para eu poder criar na tabela units, o campo solve_assessment jsonb que irá guardar o json da resposta da api. é importante já entender como integramos e usamos metodos de inserção, upsert, read e leitura ja com o supabase em outros modulos. O segundo endpoint ele é mais simples, que é o api/v2/units/{unit_id}/pdf. esse endpoint falamos depois.


alguma correçôes: student name nao existe. esse dado naona