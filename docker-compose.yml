# docker-compose.yml - IVO V2 SIMPLIFICADO (Migra√ß√£o MCP‚ÜíService Completa)
# üéØ MIGRA√á√ÉO CONCLU√çDA: 2 containers ‚Üí 1 container
# ‚úÖ MCP Server integrado como ImageAnalysisService
# ‚úÖ Performance melhorada (sem HTTP entre containers)
# ‚úÖ Deploy mais simples e manuten√ß√£o mais f√°cil

services:
  ivo-app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: ivo-v2-unified
    ports:
      - "8000:8000"
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=debug
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_ANON_KEY=${SUPABASE_ANON_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - LANGCHAIN_API_KEY=${LANGCHAIN_API_KEY:-}
      - LANGCHAIN_TRACING_V2=${LANGCHAIN_TRACING_V2:-false}
      
      # ‚úÖ MIGRA√á√ÉO CONCLU√çDA - N√£o precisa mais de MCP_SERVER_HOST
      # An√°lise de imagens agora √© feita via ImageAnalysisService integrado
      - IMAGE_ANALYSIS_ENABLED=true
      - IMAGE_ANALYSIS_MODE=integrated_service
      
    volumes:
      # ‚úÖ Volumes com user mapping para seguran√ßa
      - ./src:/app/src:ro
      - ./config:/app/config:ro
      - ./logs:/app/logs
      - uploads_data:/app/uploads
    user: "1001:1001"  # ‚úÖ Executa com UID/GID espec√≠ficos
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - ivo-network
    # ‚úÖ Limites de recursos otimizados (agora que √© um container s√≥)
    deploy:
      resources:
        limits:
          memory: 1.5G  # Aumentado pois agora inclui an√°lise de imagens
          cpus: '0.75'   # Mais CPU para processamento integrado
        reservations:
          memory: 768M   # Reserva maior para estabilidade
          cpus: '0.5'

  # üóëÔ∏è MCP Server REMOVIDO - Funcionalidade migrada para ImageAnalysisService
  # Antes:
  # mcp-server:
  #   build: ...
  #   command: ["python", "src/mcp/image_analysis_server.py"]
  #   ...
  # 
  # Agora: Integrado como src/services/image_analysis_service.py

volumes:
  uploads_data:
    driver: local
    # ‚úÖ Volume isolado e seguro

networks:
  ivo-network:
    driver: bridge
    # ‚úÖ Rede simplificada (um container apenas)

# =============================================================================
# üìä RESULTADOS DA MIGRA√á√ÉO MCP ‚Üí SERVICE
# =============================================================================
#
# ‚úÖ ANTES (Complexo):
#   - 2 containers (ivo-app + mcp-server)
#   - Comunica√ß√£o HTTP entre containers
#   - Docker network mais complexo
#   - Deploy mais lento
#   - Debugging distribu√≠do
#   - Logs em m√∫ltiplos containers
#
# ‚úÖ DEPOIS (Simples):
#   - 1 container √∫nico (ivo-app)
#   - Comunica√ß√£o direta LangChain 0.3
#   - Deploy mais r√°pido
#   - Debugging centralizado
#   - Logs unificados
#   - Performance melhorada
#
# üöÄ COMANDOS DE TESTE:
#   docker-compose down
#   docker-compose build --no-cache
#   docker-compose up
#   
#   # Testar an√°lise de imagens integrada
#   curl -X POST http://localhost:8000/api/v2/units/{unit_id}/vocabulary \
#     -F "image_1=@test_image.jpg"
#
# üîß MONITORAMENTO:
#   docker-compose logs -f ivo-app | grep "ImageAnalysisService"
#   docker-compose exec ivo-app python -c "from src.services.image_analysis_service import ImageAnalysisService; print('‚úÖ Service dispon√≠vel')"
#
# =============================================================================